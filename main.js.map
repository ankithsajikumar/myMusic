{"version":3,"sources":["./src/app/test.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/testapp/testapp.component.ts","./src/app/testapp/testapp.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n\n  printToConsole(arg: any) {\n    console.log(arg);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { TestService } from './test.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  x = 0 ;\n  response:any;\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit() {\n    this.http.get('http://hacksawrazor.pythonanywhere.com/tracks/')\n    .subscribe((response) => {\n      this.response = response;\n      console.log(this.response);\n  })\n    \n\n}\n\n}\n","<div>\n\n <!-- <div *ngFor=\"let item of response| keyvalue\" class= \"bg-dark text-white\">\n    {{ item.key }} - {{ item.value | json}}\n  </div>\n  <app-testapp></app-testapp>\n-->\n  <div class=\"d-flex flex-column flex-shrink-0 p-3 text-white bg-dark\" style=\"width: 280px; height: 100%;\">\n    <a href=\"/\" class=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none\">\n      <span class=\"fs-4\">Sidebar</span>\n    </a>\n    <hr>\n    <ul class=\"nav nav-pills flex-column mb-auto\">\n      <li class=\"nav-item\">\n        <a href=\"#\" class=\"nav-link active\" aria-current=\"page\">\n          Home\n        </a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"nav-link text-white\">\n          <svg class=\"bi me-2\" width=\"16\" height=\"16\"><use xlink:href=\"#speedometer2\"/></svg>\n          Dashboard\n        </a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"nav-link text-white\">\n          <svg class=\"bi me-2\" width=\"16\" height=\"16\"><use xlink:href=\"#table\"/></svg>\n          Orders\n        </a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"nav-link text-white\">\n          <svg class=\"bi me-2\" width=\"16\" height=\"16\"><use xlink:href=\"#grid\"/></svg>\n          Products\n        </a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"nav-link text-white\">\n          <svg class=\"bi me-2\" width=\"16\" height=\"16\"><use xlink:href=\"#people-circle\"/></svg>\n          Customers\n        </a>\n      </li>\n    </ul>\n    <img src=\"{{response[x].albumart}}\">\n    <h1>{{response[x].title}}</h1>\n    <audio id=\"player\" > <source src=\"{{response[x].track}}\" type=\"audio/mpeg\" class=\"source\" ></audio>\n    <div> \n      <button onclick=\"document.getElementById('player').play()\">Play</button> \n      <button onclick=\"document.getElementById('player').pause()\">Pause</button> \n      <button onclick=\"document.getElementById('player').volume += 0.1\">Vol +</button> \n      <button onclick=\"document.getElementById('player').volume -= 0.1\">Vol -</button> \n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-testapp',\n  templateUrl: './testapp.component.html',\n  styleUrls: ['./testapp.component.scss']\n})\nexport class TestappComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>testapp works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TestappComponent } from './testapp/testapp.component';\nimport { HttpClientModule} from  '@angular/common/http';\nimport { TestService } from './test.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestappComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [\n    TestService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}